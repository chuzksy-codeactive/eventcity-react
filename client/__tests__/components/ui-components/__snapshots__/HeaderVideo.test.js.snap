// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HeaderVideo Component test It should render the component without error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HeaderVideo
    history={
      Object {
        "push": [MockFunction],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <video
          autoPlay={true}
          loop={true}
          poster="https://res.cloudinary.com/dcgwltbei/image/upload/v1530624110/1.jpg"
          preload="true"
          volume="0"
        >
          <source
            src="https://res.cloudinary.com/dcgwltbei/video/upload/v1526644027/vine.mp4"
            type="video/mp4"
          />
          <source
            src="https://res.cloudinary.com/dcgwltbei/video/upload/v1526643986/vine1.webm"
            type="video/webm"
          />
        </video>,
        <div
          className="video-content"
        >
          <div
            className="container content"
          >
            <div
              className="row"
            >
              <div
                className="col-md-9"
              >
                <CoverInfo />
              </div>
              <div
                className="col-md-3"
              >
                <Connect(ReduxForm)
                  history={
                    Object {
                      "push": [MockFunction],
                    }
                  }
                />
              </div>
            </div>
          </div>
        </div>,
      ],
      "className": "video-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "autoPlay": true,
          "children": Array [
            <source
              src="https://res.cloudinary.com/dcgwltbei/video/upload/v1526644027/vine.mp4"
              type="video/mp4"
            />,
            <source
              src="https://res.cloudinary.com/dcgwltbei/video/upload/v1526643986/vine1.webm"
              type="video/webm"
            />,
          ],
          "loop": true,
          "poster": "https://res.cloudinary.com/dcgwltbei/image/upload/v1530624110/1.jpg",
          "preload": "true",
          "volume": "0",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "src": "https://res.cloudinary.com/dcgwltbei/video/upload/v1526644027/vine.mp4",
              "type": "video/mp4",
            },
            "ref": null,
            "rendered": null,
            "type": "source",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "src": "https://res.cloudinary.com/dcgwltbei/video/upload/v1526643986/vine1.webm",
              "type": "video/webm",
            },
            "ref": null,
            "rendered": null,
            "type": "source",
          },
        ],
        "type": "video",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="container content"
          >
            <div
              className="row"
            >
              <div
                className="col-md-9"
              >
                <CoverInfo />
              </div>
              <div
                className="col-md-3"
              >
                <Connect(ReduxForm)
                  history={
                    Object {
                      "push": [MockFunction],
                    }
                  }
                />
              </div>
            </div>
          </div>,
          "className": "video-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row"
            >
              <div
                className="col-md-9"
              >
                <CoverInfo />
              </div>
              <div
                className="col-md-3"
              >
                <Connect(ReduxForm)
                  history={
                    Object {
                      "push": [MockFunction],
                    }
                  }
                />
              </div>
            </div>,
            "className": "container content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col-md-9"
                >
                  <CoverInfo />
                </div>,
                <div
                  className="col-md-3"
                >
                  <Connect(ReduxForm)
                    history={
                      Object {
                        "push": [MockFunction],
                      }
                    }
                  />
                </div>,
              ],
              "className": "row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <CoverInfo />,
                  "className": "col-md-9",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Connect(ReduxForm)
                    history={
                      Object {
                        "push": [MockFunction],
                      }
                    }
                  />,
                  "className": "col-md-3",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "history": Object {
                      "push": [MockFunction],
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <video
            autoPlay={true}
            loop={true}
            poster="https://res.cloudinary.com/dcgwltbei/image/upload/v1530624110/1.jpg"
            preload="true"
            volume="0"
          >
            <source
              src="https://res.cloudinary.com/dcgwltbei/video/upload/v1526644027/vine.mp4"
              type="video/mp4"
            />
            <source
              src="https://res.cloudinary.com/dcgwltbei/video/upload/v1526643986/vine1.webm"
              type="video/webm"
            />
          </video>,
          <div
            className="video-content"
          >
            <div
              className="container content"
            >
              <div
                className="row"
              >
                <div
                  className="col-md-9"
                >
                  <CoverInfo />
                </div>
                <div
                  className="col-md-3"
                >
                  <Connect(ReduxForm)
                    history={
                      Object {
                        "push": [MockFunction],
                      }
                    }
                  />
                </div>
              </div>
            </div>
          </div>,
        ],
        "className": "video-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoPlay": true,
            "children": Array [
              <source
                src="https://res.cloudinary.com/dcgwltbei/video/upload/v1526644027/vine.mp4"
                type="video/mp4"
              />,
              <source
                src="https://res.cloudinary.com/dcgwltbei/video/upload/v1526643986/vine1.webm"
                type="video/webm"
              />,
            ],
            "loop": true,
            "poster": "https://res.cloudinary.com/dcgwltbei/image/upload/v1530624110/1.jpg",
            "preload": "true",
            "volume": "0",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "src": "https://res.cloudinary.com/dcgwltbei/video/upload/v1526644027/vine.mp4",
                "type": "video/mp4",
              },
              "ref": null,
              "rendered": null,
              "type": "source",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "src": "https://res.cloudinary.com/dcgwltbei/video/upload/v1526643986/vine1.webm",
                "type": "video/webm",
              },
              "ref": null,
              "rendered": null,
              "type": "source",
            },
          ],
          "type": "video",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="container content"
            >
              <div
                className="row"
              >
                <div
                  className="col-md-9"
                >
                  <CoverInfo />
                </div>
                <div
                  className="col-md-3"
                >
                  <Connect(ReduxForm)
                    history={
                      Object {
                        "push": [MockFunction],
                      }
                    }
                  />
                </div>
              </div>
            </div>,
            "className": "video-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="row"
              >
                <div
                  className="col-md-9"
                >
                  <CoverInfo />
                </div>
                <div
                  className="col-md-3"
                >
                  <Connect(ReduxForm)
                    history={
                      Object {
                        "push": [MockFunction],
                      }
                    }
                  />
                </div>
              </div>,
              "className": "container content",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col-md-9"
                  >
                    <CoverInfo />
                  </div>,
                  <div
                    className="col-md-3"
                  >
                    <Connect(ReduxForm)
                      history={
                        Object {
                          "push": [MockFunction],
                        }
                      }
                    />
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <CoverInfo />,
                    "className": "col-md-9",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Connect(ReduxForm)
                      history={
                        Object {
                          "push": [MockFunction],
                        }
                      }
                    />,
                    "className": "col-md-3",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "history": Object {
                        "push": [MockFunction],
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
